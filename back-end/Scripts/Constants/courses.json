[
  {
    "name": "Technical Communications",
    "courseId": "COMM1050",
    "description": "This course will assist students in developing professional writing and presentation skills required for university assignments and for their professional work in the future. It will start with basic writing and speaking skills and will emphasize their application in the preparation of reports and other technical writing. Topics for the course include using correct grammar and punctuation, organizing ideas, formulating persuasive arguments, and preparing narrative and written technical reports. Part of the process will involve students in the critical analysis of the writing and speaking of others as a means of developing one’s own skills.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Introduction To Engineering",
    "courseId": "ENGR1015",
    "description": "An introduction to engineering, the profession and core skills of engineers. Topics include: history of engineering; fields in engineering; how systems work; an overview of computer systems; information technology trends and state-of-the-art applications (scientific computing, communications and signal processing); role of engineers in society; core engineering skills including freehand sketching, basic engineering graphics and drafting techniques, engineering report writing and introduction to MAT programming; occupational health and safety, and safety standards.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Calculus I",
    "courseId": "MATH1010",
    "description": "Applications to science and engineering using differential calculus. Emphasis on limits, continuity, the derivative, Mean Value Theorem for derivatives and integrals, approximation by differentials, Fermat’s Theorem, differentiation and anti-differentiation, definite integrals, areas between curves, and the Fundamental Theorem of Calculus.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Linear Algebra for Engineers",
    "courseId": "MATH1850",
    "description": "Develops the fundamental ideas of linear algebra and demonstrates their applications to other areas. Topics include the algebra of matrices; systems of linear equations; determinants and matrix inverses; real and complex vector spaces, linear independence, bases, dimension and co-ordinates; inner product spaces and the Gram-Schmidt process; least squares and regression; linear maps and matrices, change of basis and similar matrices; eigenvalues, eigenvectors and matrix diagonalization; quadratic forms.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Physics I",
    "courseId": "PHY1010",
    "description": "This calculus-based course is intended for students who have completed high school calculus. It gives an introduction to basic mechanics, Newton’s laws of motion; kinematics and dynamics in one and two dimensions; work and energy; friction; momentum and collisions; angular momentum, torque and rotation of rigid bodies; gravitation; simple harmonic motion; mechanical and sound waves; static equilibrium; fluid mechanics; kinetic theory of gases and thermodynamics.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Chemistry for Engineers",
    "courseId": "CHEM1800",
    "description": "Introduction to the four sub-disciplines of modern chemistry: analytical, inorganic, organic and physical. Atoms, molecules, stoichiometry and gas laws; reactions, chemical kinetics, thermochemistry, entropy and free energy; electronic structure of atoms, bonding and molecular structure with emphasis on organic molecules; intermolecular forces, liquids and solids; electrochemistry, fuel cells and electrolytic cells.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  { 
    "name": "Engineering Design",
    "courseId": "ENGR1200",
    "description": "A project-based introduction to the engineering design process, computer-aided drafting, and the use of design tools and software packages for engineering design. Open-ended design-build projects by individuals and groups and written and oral technical communications. Basics of project management including organizing, planning, scheduling, controlling, and application of spreadsheets and project management software.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ENGR1015"],
    "reviews": []
  },
  {
    "name": "Introduction to Programming for Engineers",
    "courseId": "ENGR1200",
    "description": "Introduction to the anatomy of a computer: CPU, memory, machine cycle, input and output devices, data representation; fundamental programming concepts: flowcharting, algorithm design, use of procedures, program control flow, arrays and vectors, arithmetic and logic operations, input and output, data declaration; programming in C++.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Impact of Science and Technology on Society",
    "courseId": "SSCI1470",
    "description": "In this course, students will engage in analyses of scientific and technological developments from the perspective of broad social impacts. Special attention will be paid to controversial issues currently receiving media attention, but the major emphasis will be on ways of thinking critically about both the remediation of already existing problems (e.g. toxic substance clean-up) and the prevention of future problems (e.g. environmental impact analyses and or economic impact analyses). Canadian examples will be of primary concern, but students will also learn to think about impact globally since large-scale problems do not respect political boundaries.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Calculus II",
    "courseId": "MATH1020",
    "description": "A continuation of Calculus I or Introductory Calculus emphasizing integral calculus: problem solving, calculations and applications. Applications to volumes, arc length, polar co-ordinates and functions of two or more variables. Multivariable calculus: partial derivatives, differential equations, Taylor and MacLauren series, double integrals.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["MATH1010"],
    "reviews": []
  },
  {
    "name": "Physics II",
    "courseId": "PHY1020",
    "description": "Introduction to electromagnetism and optics: electric charge and Coulomb’s law; electric field, electric flux, Gauss’ law; electrostatic potential, capacitance; Kirchoff’s laws in DC circuits. Magnetic forces and magnetic field; Biot-Savart law; Ampere’s law; magnetic flux, Faraday’s law, inductance; AC circuits. Electromagnetic waves; wave propagation; waves in matter. Geometrical and wave optics; special relativity.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["PHY1010"],
    "reviews": []
  },
  {
    "name": "Discrete Mathematics for Engineers",
    "courseId": "ELEE2110",
    "description": "Sets and set operations, propositional logic, predicate logic, rules of inference; methods of proof and reasoning, modular arithmetic, counting, pigeonhole principle, induction, deduction, relations, functions, graphs, graph algorithms, shortest path, trees, combinatorics; applications to cryptosystems, hashing functions, coding.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["MATH1020", "MATH1850"],
    "reviews": []
  },
  {
    "name": "Electric Circuits",
    "courseId": "ELEE2790",
    "description": "Basic concepts of electricity, magnetism and electric circuits; DC and AC driven circuits; series and parallel circuits; Ohm Law, Kirchhoff Laws, Thevenin Theorem, Norton Theorem, operation of electrical equipment such as instruments, motors, generators; response to step functions; response to sinusoids, steady state AC, resonance, parallel resonance, AC power, power factor, power factor correction; introduction to magnetic circuits: coils, solenoids, transformers; single and three phase circuits, basic operation of electrical measuring equipment; basics of electronics: diodes, transistors, operational amplifiers.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["MATH1020", "MATH1850", "PHY1020"],
    "reviews": []
  },
  {
    "name": "Object Oriented Programming and Design",
    "courseId": "SOFE2710",
    "description": "Introduction to the fundamentals of software design through object-oriented programming, abstraction principles, information hiding and encapsulation. Introduction to design tools like pseudo-coding and basic Unified Modelling Language (UML) diagrams. Introduction to simple data structures, including linked lists, stacks, and queues, and their applications to Engineering problems. The content outline by topic is as follows: principles of object oriented programming; debugging and analysis; maintain and document programs using techniques of good programming style; basic and advanced, aspects of abstraction, recursion, parameter passing, file I/O and classes; object libraries and packages; object-oriented analysis and design using UML object interaction, messaging, association, and composition diagrams; abstract data types and basic data structures like lists, stacks, and queues.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ENGR1200"],
    "reviews": []
  },
  {
    "name": "Web Programming",
    "courseId": "SOFE2800",
    "description": "Introduction to electromagnetism and optics: electric charge and Coulomb’s law; electric field, electric flux, Gauss’ law; electrostatic potential, capacitance; Kirchoff’s laws in DC circuits. Magnetic forces and magnetic field; Biot-Savart law; Ampere’s law; magnetic flux, Faraday’s law, inductance; AC circuits. Electromagnetic waves; wave propagation; waves in matter. Geometrical and wave optics; special relativity.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ENGR1200"],
    "reviews": []
  },
  {
    "name": "Natural Foundations for Information Technology",
    "courseId": "SOFE2850",
    "description": "Cover the principles of basic science (physics, chemistry, biology, earth science) as they relate to Information Technology and Software Engineering. Topics covered include time, magnetics, electromagnetics, optics, biological systems, DNA computing, plagues, earth sciences, astrophysics, etc.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ENGR1015"],
    "reviews": []
  },
  {
    "name": "Digital Systems",
    "courseId": "ELEE2450",
    "description": "Boolean algebra and truth tables; combinational logics: AND, OR, NOT, XOR gates; sequential circuits: flip-flops, counters, memory circuits; logic circuit analysis, synthesis, and optimization; A/D and D/A interfaces; ROM and RAM; Programmable Logic Arrays (PLA), Field Programmable Gate Array (FPGA) and Application Specific Integrated Circuits (ASIC).",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ELEE2110"],
    "reviews": []
  },
  {
    "name": "Data Structures",
    "courseId": "SOFE2715",
    "description": "This course provides the students with a solid foundation in data structures and their associated algorithms (e.g. traversal, sorting, searching, element addition and removal) both from a theoretical, as well as practical implementation perspective. The main objective of the course is to teach students how to set and design data structures and algorithms that are appropriate for problems that they might encounter. The correctness and computational complexities of the algorithms as related to the various data structures presented is also studied. Topics covered are: analysis of algorithms, dictionaries, trees (balanced trees, binary-trees, spanning trees, etc.), hashing, sorting, graphs, sets and maps, strings and pattern matching.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE2710"],
    "reviews": []
  },
  {
    "name": "Principles of Software and Requirements Engineering",
    "courseId": "SOFE2720",
    "description": "This is a foundations course covering all aspects of Software Engineering. The first half covers introductions to: the software life cycle, introduction to object-oriented design, software requirements, software design, software construction, software testing, software maintenance, software configuration management, software documentation, software verification and validation, software quality, software process improvement. The second half of the course consists of an expanded coverage of Requirements Engineering, introduction to formal methods and different techniques for eliciting requirements.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE2710", "SOFE2800"],
    "reviews": []
  },
  {
    "name": "Statistics and Probability for Engineers",
    "courseId": "STAT2800",
    "description": "This course introduces the concepts and techniques of statistics and probability to collect, present, analyze and interpret data, and make decisions in the presence of variability. Students study a selection of topics relevant to engineering, selected from: sample spaces, probability, conditional probability, independence. Bayes’ theorem, probability distributions, algebra of expected values, descriptive statistics. Discrete and continuous random variables; probability distributions: binomial, Poisson, normal, lognormal, Weibull, etc.; mean and variance; the central limit theorem; inferences concerning means, variances, and proportions. Parameter estimation, introduction to correlation and regression. Introduction to quality control and reliability.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["MATH1020"],
    "reviews": []
  },
  {
    "name": "Microprocessors and Computer Architecture",
    "courseId": "ELEE3450",
    "description": "Introduction to Computer Architecture: CPU, ALU, I/O devices, Busses and Memory – RAM and ROM; RISC vs. CISC architecture; Assembly language programming using a microprocessor and the Hardware/Software Development Tool; Register block and associated registers; Microcontroller systems: Interrupt, timer, memory, clock and reset generation, Analog to Digital conversion (A/D) and Serial Communication Interface Systems.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ELEE2450"],
    "reviews": []
  },
  {
    "name": "Systems Programming",
    "courseId": "SOFE3200",
    "description": "This course introduces the tools and techniques of systems programming.  It begins with a coverage of generic system programming tools (loaders, debuggers, library maintainers, archivers, etc.). Then a quick coverage of compilers introduces the main types of programming languages (procedural, non-procedural, functional, interpretive). Next is a quick coverage of parsing (using YACC and Lex of ANTLR). It then explores the UNIX/Linux world including basic programming, input/output programming, process management, dynamic memory management, run-time scheduling, sys calls, shell programming and libraries. The final section explores the Windows system programming world, including basics, I/O programming, dynamic exception handling, dynamic memory management, run-time process and threads management, run-time scheduling, IPC, power shell and systems tuning.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE2720"],
    "reviews": []
  },
  {
    "name": "Software Design and Architectures",
    "courseId": "SOFE3650",
    "description": "Engineering design phase of software development: software architectural styles, static and dynamic midlevel object-oriented design concepts (UML class, interaction, and state models), and low-level design modelling. Course emphasizes the Unified Modelling Language (UML) and use of design patterns like broker, generator, reactor design patterns, etc.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE2720"],
    "reviews": []
  },
  {
    "name": "Data Management Systems",
    "courseId": "SOFE3700",
    "description": "Mass storage devices; principles of file systems; relational, object oriented, and object relational models, information retrieval. Structured query language, object oriented query language; accessing databases from modern programming languages; compression and handling of large data objects; management of database systems; strategies for managing big data; managing different data types; semi-structured data and unstructured data.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE2720", "SOFE2715"],
    "reviews": []
  },
  {
    "name": "Design and Analysis of Algorithms",
    "courseId": "SOFE3770",
    "description": "Designing and analyzing algorithms; asymptotic notation; recurrences and recursion; probabilistic analysis and randomized algorithms; sort algorithms; priority queues; medians and order statistics; data and advanced data structures; augmenting data structures for custom applications; dynamic programming; greedy algorithms; graph algorithms; sorting networks; matrix operations; linear programming; number theoretic algorithms; string matching; NP-completeness and approximation algorithms; object libraries.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ELEE2110", "SOFE2715", "MATH1850"],
    "reviews": []
  },
  {
    "name": "Engineering Economics",
    "courseId": "ENGR3360",
    "description": "Aspects of theoretical and applied economics relevant to engineers, including an introduction to fundamental principles of micro and macroeconomics. Microeconomics topics include scarcity, opportunity cost, diminishing returns, elasticity, industrial organization, economies of scale and concentration. Macroeconomics topics include unemployment, inflation, economic growth, the multiplier, equilibrium, fiscal policy and monetary policy. The principle of money and banking are introduced along with the role of the Bank of Canada. Applied economics topics covered include cost concepts, time value of money, comparison of alternatives, depreciation, tax considerations, economic analysis of projects, breakeven, sensitivity and risk, and decision models. Other topics covered include: economic decision analysis applied to private and public sector capital projects, discounted cash flow methods, lease analysis, replacement decisions, inflation impacts and public sector project analysis.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Introduction to Artificial Intelligence",
    "courseId": "SOFE3720",
    "description": "This course introduces students to basic concepts and methods of artificial intelligence from a software engineering perspective. Emphasis of the course will be on the selection of data representations and algorithms useful in the design and implementation of intelligent systems. Knowledge representation methods, state space search strategies, and use of logic for problem solving. Applications chosen from among expert systems, planning, natural language understanding, uncertainty reasoning, machine learning, and robotics. The course will contain an overview of one AI language and discussion of important applications of artificial intelligence methodology.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3650", "SOFE3770"],
    "reviews": []
  },
  {
    "name": "Software Project Management",
    "courseId": "SOFE3490",
    "description": "Software engineering course with emphasis on advanced methods and procedures for managing a software development project. Includes project planning, scheduling, and cost estimation; project organizational types; staffing and training considerations; leading and motivating computer personnel; and methods for measuring and controlling a project. Emphasizes IEEE software engineering management standards and keys to project success. Class project required.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Computer Networks",
    "courseId": "SOFE3850",
    "description": "Network history and architectures; reference Model for Open Systems Interconnection (OSI): descriptions, examples, and applications; bridges, routers, gateways; routing, multicast deliver; TCP/IP protocol suite; network topologies (ring, bus, tree, star, mesh); local area networks, Ethernet, Token passing, wireless LAN, personal LAN, WAN.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Operating Systems",
    "courseId": "SOFE3950",
    "description": "The organization and structure of modern operating systems and concurrent programming concepts. Context within which the operating system functions (hardware, other system programs, application programs, interactive users), internals and design issues, design trade-offs and decisions. Process description and control. Threads, SMP, microkernels. Concurrency: mutual exclusion and synchronization. Deadlocks and starvation. Memory management and virtual memory. Uniprocessor scheduling. Multiprocessor and real-time scheduling. I/O management and disk scheduling. File management. Introduction to distributed processing and client/ server computing, distributed process management. Security, performance, and protection.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ELEE3450", "SOFE3200"],
    "reviews": []
  },
  {
    "name": "Software Quality",
    "courseId": "SOFE3980",
    "description": "Processes, methods and techniques for developing quality software, for assessing software quality, and for maintaining the quality of software. Software testing at the unit, module, subsystem and system levels, automatic and manual techniques for generating and validating test data, the testing process, static vs. dynamic analysis, functional testing, inspections and reliability assessment. Trade-offs between software cost, schedule, time, and quality, integration of quality into the software development process as well as the principles of test planning and test execution. Process awareness, capability maturity.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3200", "SOFE3770", "SOFE3650", "SOFE3700"],
    "reviews": []
  },
  {
    "name": "Capstone Systems Design for Electrical, Computer and Software Engineering I",
    "courseId": "ENGR4940",
    "description": "This final year capstone design engineering course culminates a major design experience for ECSE students. It allows students to integrate their engineering knowledge and produce useful engineering artifacts. The course exposes students to successfully implement the engineering design process and appropriate engineering design methods into creatively solving design problems conditioned with realistic constraints while using state-of-the-art engineering tools and incorporating engineering standards with a focus on economic, environmental, sustainability, manufacturability, ethical, health and safety, and socio-political considerations. Yet another objective of the course is to focus on improving the students’ soft skills that include the ability to work in teams, participate in project planning and scheduling, give presentations, and be able to deal with uncertainties in a professional manner. This design-built project based course normally includes studying open-ended engineering design topics. These may consist of real-world design projects proposed and sponsored by industrial partners, or design projects on topics proposed by Faculty Advisors, or topics proposed by a group of enrolled students. In this context, the engineering design process will be reviewed along with its application to the design of the said systems. By the end of this course students will have completed the following parts of the design process for their projects: Customer Requirements; Background Search; Design Plan and Project Management; Brainstorming; Preliminary Concept Generation; Sketching Ideas; Engineering Specifications (Benchmarking); Detailed Concept Generation; Functional Decomposition; Concept Development and Screening/Selection; Group Preliminary Proof of Concept Prototype Demonstrations and Oral Presentations; and Final Engineering Term Report.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ELEE3450", "ENGR3360", "SOFE3200", "SOFE3490", "SOFE3650", "SOFE3700", "SOFE3720", "SOFE3770", "SOFE3850", "SOFE3950", "SOFE3980"],
    "reviews": []
  },
  {
    "name": "Embedded Systems",
    "courseId": "SOFE4590",
    "description": "Embedded systems range from microprocessor-based controllers to system-on-a-chip, and applications of embedded systems including consumer electronics, automotive systems, medical devices, and robotics to name a few. This course covers the characteristics, design and implementation of embedded systems, and issues in hardware/software interfacing. Topics include: specification languages for capturing system behavior, tools for validation and verification, microcontrollers and their programming models.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ELEE3450", "SOFE3950"],
    "reviews": []
  },
  {
    "name": "Distributed Systems",
    "courseId": "SOFE4790",
    "description": "This course exposes the student to the major paradigms of distributed systems. Topics include: distributed architectures; distributed processing models like client-server and code migration; inter-process communication; distributed naming and directory services; inter-process synchronization; distributed security; fault tolerance; distributed object-based systems; distributed file systems; distributed web-based systems; introduction to distributed coordination systems like peer-to-peer, publish/ subscribe, and GRID services.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3770", "SOFE3850", "SOFE3950"],
    "reviews": []
  },
  {
    "name": " User Interfaces",
    "courseId": "SOFE4850",
    "description": "Principles of human interaction with computers, graphical user interfaces (Windows, Unix), concrete designs and good design principles. Rapid prototyping, evaluation methods for user interfaces, cognitive psychology. Ergonomics, principles of computer graphics, voice recognition, remote instrumentation, immersive environments, virtual reality, and augmented reality.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3650"],
    "reviews": []
  },
  {
    "name": "Ethics, Law and Professionalism for Engineers",
    "courseId": "ENGR4760",
    "description": "Legal aspects of engineering practice; business organizations and corporations; intellectual and industrial property; conflict resolution; tort liability and contract law; employment and labour law; public safety and health considerations; occupational health and safety and WHMIS; Canadian and international engineering standards and commercial practices; international trade; environmental laws and regulations; environmental stewardship and sustainable development; corporate social responsibility; equity. Ethics and moral philosophy; applied ethics; ethical aspects of engineering practice; engineering codes of ethics and ethical obligations of engineers; detecting ethical dilemmas and methods for resolving them; research ethics. The engineering profession and its history; engineering associations and societies; engineering licensure; the role and responsibilities of the professional engineer in society; engineers in industry, management and private practice.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": [],
    "reviews": []
  },
  {
    "name": "Capstone Systems Design for Electrical, Computer and Software Engineering II",
    "courseId": "ENGR4941",
    "description": "This capstone design engineering course constitutes the second part (continuation) of a two-term capstone design endeavour which started in the fall term through Capstone Systems Design for Electrical, Computer and Software Engineering I course. These two consecutive capstone design courses (Capstone Systems Design for Electrical, Computer and Software Engineering I and Capstone Systems Design for Electrical, Computer and Software Engineering II) represent a critical mandatory component of the CEAB (Canadian Engineering Accreditation Board) accredited engineering degree. They provide a culminating capstone design engineering experience that integrates aspects of many prior engineering courses taken by the enrolled students. This second part of a two-part graduating year capstone design courses is envisioned to represent a culminating major teamwork design experience for engineering students specializing in the areas of electrical and software engineering. It is meant to allow senior-level students to integrate their engineering knowledge and produce useful engineering artifacts. During this winter term, the students will continue to work in the same small groups that were created during the previous fall term. By the end of this course students will have completed the entire design process for their projects including the following tasks: Design Refinements based on findings from Proof-of-Concept Prototype; Detailed Design and Engineering Analysis; Test Plan; Test Results and Product Validation; Final Project Presentation; Final Project Report; and Prototype System Demonstration.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["ENGR4940"],
    "reviews": []
  },
  {
    "name": "Software and Computer Security",
    "courseId": "SOFE4840",
    "description": "Introduction to software security, managing software security risk, selecting technologies open vs. closed source, principles of software security, auditing software, buffer overflows, access control, authorization and authentication, race conditions, randomness and determinism, applying cryptography, trust management and input validation, law and ethics of IT security, security at the operating system and network level. Firewalls, intrusion detection.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3850", "SOFE4790"],
    "reviews": []
  },
  {
    "name": "Machine Learning and Data Mining",
    "courseId": "SOFE4620",
    "description": "This course is offered in two parts. First part covers the discovery of new knowledge using various data mining techniques on real‐world datasets. Introducing the details of the current Algorithms in Data Mining and Machine Learning such as supervised and unsupervised learning, neural networks and deep learning, dimensionality reduction, and information theory is the fundamental context for this course. This course utilizes the latest blended learning techniques to explore topics in foundations of knowledge discovery and data mining; data mining approaches; and the application of data mining within such diverse domains as health care, business, supply chain and IT security. Current research directions, trends, issues and challenges are also explored.  The second part will cover the applications of Machine Learning and Data mining in Internet of Things IoT) domain. Issues with the data extracted or collected from an IoT system are covered in two parts: 1) Mining time series data and 2) Introduction to streaming and real‐time data mining. ",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3720"],
    "reviews": []
  },
  {
    "name": "Cloud Computing",
    "courseId": "SOFE4630",
    "description": "The objective of this course is to expose students to the state of the art in cloud computing. Students will learn about issues relevant to the design, implementation and operation of cloud computing infrastructures, platforms, and services for the Internet of Things (IoT). Topics include web services, description languages, communication protocols, data centres, virtualization, storage, big data, and cloud programming models, services and resource management, and security, privacy and trust issues. In addition, students will learn about systems research through a research and development project.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE4790"],
    "reviews": []
  },
  {
    "name": "Mobile Application Development",
    "courseId": "SOFE4640",
    "description": "The objective of this course is to expose students to the state of the art in mobile application development. Students will learn about mobile operating systems, wireless networks, communication protocols, native and cross-platform mobile application development, software architecture for mobile applications, mobile apps for the Internet of Things, performance evaluation and the mobile user experience, app stores, the full development and publishing lifecycle of mobile applications, and security/privacy/trust of mobile applications and services.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3950"],
    "reviews": []
  },
  {
    "name": "Modelling and Simulation",
    "courseId": "SOFE4820",
    "description": "This course introduces computer simulation approaches using deterministic and Monte Carlo techniques in systems modelling, including: use of general purpose simulators in systems planning, design, evaluation, and prediction; life cycle of a simulation project; problem formulation; conceptual modelling and modelling techniques; simulation modelling including continuous and discrete event simulations; validation and verification; design of experiments, simulation tools and languages; output data analysis; and also special topics including uncertainty modelling, parallel and distributed simulations. Footprints of the computer simulation can be observed in all science and engineering fields such as transportation, manufacturing, design engineering.",
    "university": "605655053cae059dff8893d0",
    "prerequisites": ["SOFE3770", "STAT2800"],
    "reviews": []
  }
]